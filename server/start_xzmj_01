#!/bin/bash
#
# manage universe

prog="node"
server=""
pidfile="801.pid"
name="xzmj_01"
args="xzmj_01.js"

RETVAL=0
_start() {
    echo -n $"Starting $name .............."
    if [ -f ${pidfile} ]; then
        pid=`cat ${pidfile}`
        if [ -d "/proc/${pid}" ]; then
            echo -e "\t\E[31;40m[FAIL]\033[0m"
            echo "$name is Running"
        else
            rm -f ${pidfile}
            $prog $args 1>/dev/null &
            for i in {1..5}; do
                if [ -f $pidfile ]; then
                    echo -e "\t\E[32;40m[OK]\033[0m"
                    break
                else
                    if [ $i -eq 5 ]; then
                        echo -e "\t\E[31;40m[FAIL]\033[0m"
                    fi
                fi
                sleep 1
            done
         fi
    else
        $prog $args 1>/dev/null &
        for i in {1..5}; do
            if [ -f $pidfile ]; then
                echo -e "\t\E[32;40m[OK]\033[0m"
                break
            else
                if [ $i -eq 5 ]; then
                    echo -e "\t\E[31;40m[FAIL]\033[0m"
                fi
            fi
            sleep 1
        done
    fi
    sleep 1
    RETVAL=$?
}

_stop() {
    echo -n $"Stopping $name .............."
    if [ -f ${pidfile} ]; then
        pid=`cat ${pidfile}`
        if [ -d "/proc/${pid}" ]; then
            while [ -d "/proc/${pid}" ]; do
                kill  -9 ${pid}
                echo -e "\t\E[32;40m[OK]\033[0m"
                sleep 1
            done
        fi
        rm -f ${pidfile}
    else
        echo -e "\t\E[31;40m[FAIL]\033[0m\t$name is Stoping"
    fi
    sleep 1
    RETVAL=$?
}

_reload() {
    echo $"Reloading nothing ............"
    RETVAL=$?
}

_status() {
    echo -n -e "$name\t\t"
    if [ -f ${pidfile} ]; then
        pid=`cat ${pidfile}`
        echo -n -e "$pid\t\t"
        if [ -d "/proc/${pid}" ]; then
            echo -n -e "\E[32;40m[Running]\033[0m\t"
        else
            echo -n -e "\E[31;40m[Lost]\033[0m\t"
        fi

        echo `ps -p $pid -o rss | tail -n 1 | awk '{printf("%.2fM", $1/1024)}'`
    else
        echo -e "-\t\t\E[31;40m[Stoped]\033[0m\t-"
    fi
    sleep 1
    RETVAL=$?
}

start() {
    _start
}

stop() {
    _stop
}

status() {
    _status
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status
        ;;
  restart)
        stop
        sleep 3
        start
        ;;
  reload)
        reload
        ;;
  *)
        echo $"Usage: manage {start|stop|restart|status}"
        exit 1
esac

exit $RETVAL
